@page "/shipping-create"
@using HiBlazor.Shared.VmModels;
@inject HttpClient Http
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager


<RadzenTemplateForm Data="@reservationVm" Submit="@((ReservationVm args) => { Submit(args); })">
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack>
                <RadzenFieldset Text="Nakliye Talebi Oluştur">
                    <RadzenStack Gap="1rem">
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Nereden" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox @bind-Value=@reservationVm.StartingPlace Style="width: 100%;" />
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Nereye" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextBox @bind-Value=@reservationVm.DestinationPlace Style="width: 100%;" />
                            </RadzenColumn>
                        </RadzenRow>
                        <RadzenRow AlignItems="AlignItems.Center">
                            <RadzenColumn Size="12" SizeMD="4">
                                <RadzenLabel Text="Açıklama" />
                            </RadzenColumn>
                            <RadzenColumn Size="12" SizeMD="8">
                                <RadzenTextArea @bind-Value=@reservationVm.Description Rows="2" Style="width: 100%;" />
                            </RadzenColumn>
                        </RadzenRow>

                    </RadzenStack>
                </RadzenFieldset>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" />
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Icon="cancel" Text="Cancel" Click="@Cancel" />
    </RadzenStack>
</RadzenTemplateForm>




@code {
    private bool isAuthenticated;
    ReservationVm reservationVm = new ReservationVm();

    async void Submit(ReservationVm arg)
    {
        var registerService = await Http.PostAsJsonAsync("reservation/create", arg);
        if (registerService.IsSuccessStatusCode)
        {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Başarılı", Detail = "Rezervasyon başarıyla oluşturuldu." });
            NavigationManager.NavigateTo("/");
            return;
        }

        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "hata" });
    }

    void Cancel()
    {
        //
    }

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await Http.GetFromJsonAsync<bool>("users/islogin");
        if (!isAuthenticated)
        {
            NavigationManager.NavigateTo("login");
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "Bu sayfaya erişim izniniz yok" });
        }
    }

}
